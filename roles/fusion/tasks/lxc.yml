---
- name: Relink the /var/lib/lxc directory to the /containers mountpoint
  file:
    src: /containers
    dest: /var/lib/lxc
    force: yes
    state: link

- name: Empty lxc defaults file
  shell: cat /dev/null > /etc/lxc/default.conf
  args:
    executable: /bin/bash

- name: Install containers
  lxc_container:
    name: container{{  "%03d" | format(item.path.ipv4.address.split(".")[2]|int) }}{{  "%03d" | format(item.path.ipv4.address.split(".")[3]|int) }}
    backing_store: loop
    fs_size: 40G
    fs_type: xfs
    container_log: true
    state: started
    template: download
    template_options: --dist ubuntu --release focal --arch amd64
    container_config:
      - "lxc.apparmor.profile=unconfined"
      - "lxc.net.0.type=phys"
      - "lxc.net.0.link={{ item.dev }}"
      - "lxc.net.0.name=eth0"
      - "lxc.net.0.flags=up"
      - "lxc.net.0.ipv4.address={{ item.cidr | ansible.utils.ipaddr('host/prefix') }}"
      - "lxc.mount.entry = /data data none {{ item.mount_opts  }},bind,create=dir 0 0"
      - "lxc.cgroup.cpu.cfs_period_us = 100000"
      - "lxc.cgroup.cpu.cfs_quota_us = {{ item.cpus * 100000}}"
      - "lxc.cgroup.memory.limit_in_bytes = {{ item.mem }}"
      - "lxc.cgroup.memory.memsw.limit_in_bytes = {{ item.mem }}"
  loop: "{{ containers }}"

- name: Start container configuration
  lxc_container:
    name: container{{  "%03d" | format(item.path.ipv4.address.split(".")[2]|int) }}{{  "%03d" | format(item.path.ipv4.address.split(".")[3]|int) }}
    container_command: |
      date 2>&1 | tee -a /var/log/container-init.log
      sleep 5 #Wait for network interfaces to fully come up
      ip route add default via {{ item.cidr | ansible.utils.ipaddr('host/prefix') | ansible.utils.ipaddr('1') | ansible.utils.ipaddr('address') }} && ip route | tee -a /var/log/container-init.log
      echo "DNS={{ ansible_eth0.ipv4.address  }}" >>/etc/systemd/resolved.conf 2>&1 | tee -a /var/log/container-init.log
      systemctl restart systemd-resolved | tee -a /var/log/container-init.log
      apt-get update 2>&1 | tee -a /var/log/container-init.log
      apt-get install -y git ansible 2>&1 | tee -a /var/log/container-init.log
      git clone https://github.com/burgerjx/iog-hpcc-vmboot.git /opt/ansible 2>&1 | tee -a /var/log/container-init.log
      ansible-galaxy collection install ansible.utils
      ansible-playbook /opt/ansible/container-ubuntu20.yml 2>&1 | tee -a /var/log/container-init.log
  loop: "{{ containers }}"